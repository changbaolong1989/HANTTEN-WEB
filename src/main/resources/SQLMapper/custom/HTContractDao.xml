<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hd.manager.dao.HTContractDao">

    <resultMap id="selectList" type="com.hd.manager.dao.bean.HTContractTaskHisTaskInstBean">
        <id column="parentTaskKey" property="taskKey" />
        <collection property="HTContractTaskHisTaskInstBeanList" ofType="com.hd.manager.dao.bean.HTContractTaskHisTaskInstBean">
            <id column="historyId" property="historyId" />
            <result column="contractTaskId" property="contractTaskId" />
            <result column="processInstId" property="processInstId" />
            <result column="taskKey" property="taskKey" />
            <result column="isPass" property="isPass" />
            <result column="rejectReason" property="rejectReason" />
            <result column="approveUserId" property="approveUserId" />
            <result column="approveUserName" property="approveUserName" />
            <result column="approveTime" property="approveTime" />
            <collection property="htUserQuestionRecordRelationBeanList" ofType="com.hd.manager.dao.bean.HTUserQuestionRecordRelationBean">
                <id column="childRelationId" property="relationId"></id>
                <result column="childRecordId" property="recordId"></result>
                <result column="childUserId" property="userId"></result>
                <result column="childUserName" property="userName"></result>
                <result column="childQuestionId" property="questionId"></result>
                <result column="childQuestionName" property="questionName"></result>
                <result column="childQuestionNum" property="questionNum"></result>
                <result column="childSourceType" property="sourceType"></result>
            </collection>
        </collection>
    </resultMap>

    <!--检索合同预计收款时间列表-->
    <select id="excSelectContractProjectTypeRelations" resultType="com.hd.manager.dao.bean.HTContractBean">
         SELECT  project_type AS  projectType,
                  project_target AS projectTarget
           FROM tb_contract_project_type_relation
          WHERE is_del_flg = 0
            AND  contract_id = #{contractId}
    </select>

    <!--检索预计收款时间列表-->
    <select id="excSelectPredictRequestRelations" resultType="com.hd.manager.dao.bean.HTContractBean">
        SELECT  start_date AS  startDate,
                 received_amount AS  receivedAmount,
                 is_provisional  AS  isProvisional
        FROM tb_contract_predict_request_relation
        WHERE is_del_flg = 0
        AND  contract_id = #{contractId}
        ORDER BY start_date
    </select>


    <!--批量插入合同和项目类别指标列表数据-->
    <insert id="excInsertContractProjectTypeRelations">
        INSERT INTO tb_contract_project_type_relation(
            contract_id
            ,project_type
            ,project_target
            ,is_del_flg
            ,create_date
            ,update_date
            ,create_user_id
            ,update_user_id
        )VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.contractId}
                ,#{item.projectType}
                ,#{item.projectTarget}
                ,#{item.isDelFlg}
                ,#{item.createDate}
                ,#{item.updateDate}
                ,#{item.createUserId}
                ,#{item.updateUserId}
            )
        </foreach>

    </insert>

    <!--批量插入预计收款时间-->
    <insert id="excInsertContractPredictRequestRelations">
        INSERT INTO tb_contract_predict_request_relation(
            predict_request_id
            ,contract_id
            ,start_date
            ,received_amount
            ,is_provisional
            ,is_del_flg
            ,create_date
            ,update_date
            ,create_user_id
            ,update_user_id
        )VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.predictRequestId}
                ,#{item.contractId}
                ,#{item.startDate}
                ,#{item.receivedAmount}
                ,#{item.isProvisional}
                ,#{item.isDelFlg}
                ,#{item.createDate}
                ,#{item.updateDate}
                ,#{item.createUserId}
                ,#{item.updateUserId}
            )
        </foreach>

    </insert>

    <!--删除合同和项目类别指标列表数据-->
    <delete id="excDeleteContractProjectTypeRelations">
        delete from
            tb_contract_project_type_relation
        where
            contract_id = #{contractId}
    </delete>

    <!--删除预计收款时间-->
    <delete id="excDeleteContractPredictRequestRelations">
        delete from
            tb_contract_predict_request_relation
        where
            contract_id = #{contractId}
    </delete>

    <!--查询合同任务历史流程(审核记录)-->
    <select id="excSearchHTContractTaskHisTaskInstInfoList" resultMap="selectList">
        SELECT
            tctht.task_key           AS parentTaskKey,
            tctht.history_id         AS historyId,
            tctht.contract_task_id   AS contractTaskId,
            tctht.process_inst_id    AS processInstId,
            tctht.task_key           AS taskKey,
            tctht.is_pass            AS isPass,
            tctht.reject_reason      AS rejectReason,
            tctht.approve_user_id    AS approveUserId,
            ptu.user_name            AS approveUserName,
            tctht.approve_time       AS approveTime,
            tuqrr.relation_id		 AS childRelationId,
            tuqrr.record_id			 AS childRecordId,
            tuqrr.user_id			 AS childUserId,
            tu.user_name			 AS childUserName,
            tuqrr.question_id		 AS childQuestionId,
            tdq.question_name		 AS childQuestionName,
            tuqrr.question_num	     AS childQuestionNum,
            tuqrr.source_type		 AS childSourceType
        FROM
            tb_contract_his_task_inst tctht
        LEFT JOIN
        (
            SELECT
                *
            FROM
                tb_user_question_record_relation
            WHERE
                source_type = '0'
        ) tuqrr
        ON
            tuqrr.record_id = tctht.history_id
        LEFT JOIN
            tb_user tu
        ON
            tu.user_id = tuqrr.user_id
        LEFT JOIN
            tb_user ptu
        ON
            ptu.user_id = tctht.approve_user_id
        LEFT JOIN
            tb_dict_question tdq
        ON
            tdq.question_id = tuqrr.question_id
        WHERE
            tctht.contract_task_id = #{contractTaskId}
        order by
            tctht.approve_time asc
    </select>

    <!--通过部门id和当前登录人id查询职位名称-->
    <select id="excSearchJobNameByLoginUserIdAndDepartmentId" resultType="com.hd.manager.dao.bean.HTContractBean">
        select
           tj.job_name as jobName
        from
            tb_job tj
        where
            tj.is_del_flg = 0
        and
            tj.involved_department = #{departmentId}
        and
            tj.job_id in (
                select
                    tujr.job_id
                from
                    tb_user_job_relation tujr
                where
                    tujr.user_id = #{currentUserId}
            )
        order by
            tj.job_level asc
    </select>

    <select id="getContractInfoByContractId" resultType="com.hd.manager.dao.bean.HTContractBean">
        SELECT
           tc.contract_id            as contractId,
           tc.process_inst_id        as processInstId,
           tc.delegate_task_key      as delegateTaskKey ,
           tc.delegate_task_id       as  delegateTaskId,
           tc.submit_node            as submitNode,
           tc.apply_user_id          as applyUserId,
           tc.apply_time             as applyTime,
           tu.user_name               as applyUserName,
           tc.approve_user_id        as approveUserId,
           tc.approve_user_name      as approveUserName,
           tc.approve_time            as approveTime,
           tc.is_can_recall           as isCanRecall,
           tc.verify_state            as verifyState,
           tc.complete_time           as completeTime,
           tc.project_id              as projectId,
           tc.job_id                   as jobId,
           tc.department_id           as departmentId,
           tc.contract_file_name     as contractFileName,
           tc.contract_file_path     as contractFilePath,
           tc.contract_type          as contractType,
           tc.formwork_type          as formworkType,
           tp.project_sts            as  projectSts,
           tc.current_state          as currentState,
           tc.legal_opinion          as legalOpinion,
           tp.project_num            as projectNum,
           tc.contract_num           as contractNum,
           tu.open_id                as openId,
           tc.update_date            as updateDate
        from
            tb_contract tc
        left join
            tb_user tu
        on
            tu.user_id = tc.apply_user_id
        left join
            tb_project tp
        on
            tp.project_id = tc.project_id
        where
            tc.contract_id = #{contractId}
        and
            tc.is_del_flg = 0
    </select>

    <!--添加文件信息-->
    <insert id="excInsertContractArchiveFileRelationInfo" parameterType="com.hd.common.entity.TbContractSaveMaterialRelationEntity">
        insert into tb_contract_save_material_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="relationId != null">
                relation_id,
            </if>
            <if test="contractId != null">
                contract_Id,
            </if>
            <if test="materialPath != null">
                material_path,
            </if>
            <if test="materialName != null">
                material_name,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="isDelFlg != null">
                is_del_flg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="relationId != null">
                #{relationId,jdbcType=VARCHAR},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="materialPath != null">
                #{materialPath,jdbcType=VARCHAR},
            </if>
            <if test="materialName != null">
                #{materialName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="isDelFlg != null">
                #{isDelFlg,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <!--查询合同文件信息-->
    <select id="searchContractArchiveFileList"  resultType="com.hd.manager.dao.bean.HTContractBean">
        select
            tcsmr.relation_id             AS relationId,
            tcsmr.material_name           AS materialName,
            tcsmr.material_path           AS materialPath
        from
            tb_contract_save_material_relation tcsmr
        where
            tcsmr.is_del_flg = 0
       and
            contract_id = #{contractId}
    </select>

    <!--查询合同列表信息-->
    <select id="excSearchContractList" resultType="com.hd.manager.dao.bean.HTContractBean">
        select
        temp.*
        from
        (<include refid="excSearchContractListSql" />) temp
        limit #{pageNumber},#{pageSize}
    </select>
    <!--查询合同列表总数-->
    <select id="excSearchContractCount" resultType="java.lang.Integer">
        select
        count(1)
        from
        (<include refid="excSearchContractListSql" />) temp
    </select>

    <sql id="excSearchContractListSql">
        select
        contract_info.*
        from
        (
            SELECT

                tc.contract_id	                    AS contractId,
                CONCAT_WS('-',tp.project_num,tc.contract_num)	AS contractNum,
                tp.project_num                      AS projectNum,
                tc.contract_file_path		        AS contractFilePath,
                tc.contract_file_name		        AS contractFileName,
                tc.legal_opinion				    AS legalOpinion,
                IF(ISNULL(tc.legal_opinion),0,1)    AS legalOpinionFlag,
                tc.department_id 		            AS departmentId,
                tdd.department_name 		        AS departmentName,
                tc.create_date                      AS createDate,
                tc.contract_type                    AS contractType,
                tc.formwork_type                    AS formworkType
            FROM
                tb_contract tc
            LEFT JOIN
            tb_dict_department tdd
            ON tc.department_id = tdd.department_id
            LEFT JOIN
            tb_project tp
            ON tc.project_id = tp.project_id
            WHERE
                tc.is_del_flg = 0
                AND tc.verify_state in(1,2)
        ) contract_info
        WHERE
            1=1
        <if test="contractNum != null and contractNum!= ''">
            AND contract_info.contractNum like concat(concat('%',#{contractNum}),'%')
        </if>

        <if test="departmentId != null and departmentId!= ''">
            AND contract_info.departmentId = #{departmentId}
        </if>
        ORDER BY
            contract_info.legalOpinionFlag ASC,
            contract_info.createDate desc
    </sql>

    <select id="excSearchContractListByProperty" resultType="com.hd.manager.dao.bean.HTContractBean">

        SELECT
           tc.contract_id            as contractId,
           tc.current_state          as currentState,
           tc.cooperate_contract     as cooperateContract,
           tc.apply_user_id          as applyUserId,
           tc.is_invalid_flag        as isInvalidFlag
        from
            tb_contract tc
        where
            tc.is_del_flg = 0
        <if test="cooperateContract != null and cooperateContract!= ''">
            and
                tc.cooperate_contract = #{cooperateContract}
        </if>
        <if test="projectId != null and projectId!= ''">
            and
            tc.project_id = #{projectId}
        </if>
        <if test="contractIdList != null and contractIdList.size()>0">
            and
            tc.contract_id not in (
            <foreach collection = "contractIdList" item = "item" separator="," >
                #{item}
            </foreach>
            )
        </if>
    </select>


    <!--查询合同列表信息-->
    <select id="excSearchLegalAffairContractList" resultType="com.hd.manager.dao.bean.HTContractBean">
        select
        temp.*
        from
        (<include refid="excSearchLegalAffairContractListSql" />) temp
        limit #{pageNumber},#{pageSize}
    </select>
    <!--查询合同列表总数-->
    <select id="excSearchLegalAffairContractCount" resultType="java.lang.Integer">
        select
        count(1)
        from
        (<include refid="excSearchLegalAffairContractListSql" />) temp
    </select>

    <sql id="excSearchLegalAffairContractListSql">
        select
        contract_info.*
        from
        (
        SELECT

        tc.contract_id	                    AS contractId,
        CONCAT_WS('-',tp.project_num,tc.contract_num)	AS contractNum,
        tp.project_num                      AS projectNum,
        tc.contract_file_path		        AS contractFilePath,
        tc.contract_file_name		        AS contractFileName,
        tc.legal_opinion				    AS legalOpinion,
        IF(ISNULL(tc.legal_opinion),0,1)    AS legalOpinionFlag,
        tc.department_id 		            AS departmentId,
        tdd.department_name 		        AS departmentName,
        tc.create_date                      AS createDate,
        tc.contract_type                    AS contractType,
        tc.formwork_type                    AS formworkType,
        tc.is_invalid_flag                  AS  isInvalidFlag
        FROM
        tb_contract tc
        LEFT JOIN
        tb_dict_department tdd
        ON tc.department_id = tdd.department_id
        LEFT JOIN
        tb_project tp
        ON tc.project_id = tp.project_id
        WHERE
        tc.is_del_flg = 0
        AND tc.verify_state in(1,2)
        ) contract_info
        WHERE
        1=1
        AND
        (contract_info.isInvalidFlag = '0' OR contract_info.isInvalidFlag is null)
        <if test="contractNum != null and contractNum!= ''">
            AND contract_info.contractNum like concat(concat('%',#{contractNum}),'%')
        </if>

        <if test="departmentId != null and departmentId!= ''">
            AND contract_info.departmentId = #{departmentId}
        </if>
        ORDER BY
        contract_info.legalOpinionFlag ASC,
        contract_info.createDate desc
    </sql>
</mapper>
