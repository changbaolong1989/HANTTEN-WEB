<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.common.dao.TbUserEntityMapper">
  <resultMap id="BaseResultMap" type="com.hd.common.entity.TbUserEntity">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="entry_date" jdbcType="TIMESTAMP" property="entryDate" />
    <result column="is_incumbent" jdbcType="VARCHAR" property="isIncumbent" />
    <result column="sign_path" jdbcType="VARCHAR" property="signPath" />
    <result column="professional_name" jdbcType="VARCHAR" property="professionalName" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="save_access_token_date" jdbcType="TIMESTAMP" property="saveAccessTokenDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="is_del_flg" jdbcType="VARCHAR" property="isDelFlg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_account, user_name, password, telephone, email, education, company_id, 
    entry_date, is_incumbent, sign_path, professional_name, open_id, access_token, save_access_token_date, 
    create_date, create_user_id, update_date, update_user_id, is_del_flg
  </sql>
  <select id="selectByExample" parameterType="com.hd.common.entity.TbUserEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd.common.entity.TbUserEntityExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd.common.entity.TbUserEntity">
    <selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_user (user_id, user_account, user_name, 
      password, telephone, email, 
      education, company_id, entry_date, 
      is_incumbent, sign_path, professional_name, 
      open_id, access_token, save_access_token_date, 
      create_date, create_user_id, update_date, 
      update_user_id, is_del_flg)
    values (#{userId,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{entryDate,jdbcType=TIMESTAMP}, 
      #{isIncumbent,jdbcType=VARCHAR}, #{signPath,jdbcType=VARCHAR}, #{professionalName,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, #{saveAccessTokenDate,jdbcType=TIMESTAMP}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{isDelFlg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd.common.entity.TbUserEntity">
    <selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      user_id,
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="entryDate != null">
        entry_date,
      </if>
      <if test="isIncumbent != null">
        is_incumbent,
      </if>
      <if test="signPath != null">
        sign_path,
      </if>
      <if test="professionalName != null">
        professional_name,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="saveAccessTokenDate != null">
        save_access_token_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="isDelFlg != null">
        is_del_flg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{userId,jdbcType=VARCHAR},
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null">
        #{entryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isIncumbent != null">
        #{isIncumbent,jdbcType=VARCHAR},
      </if>
      <if test="signPath != null">
        #{signPath,jdbcType=VARCHAR},
      </if>
      <if test="professionalName != null">
        #{professionalName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="saveAccessTokenDate != null">
        #{saveAccessTokenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        #{isDelFlg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd.common.entity.TbUserEntityExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccount != null">
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.entryDate != null">
        entry_date = #{record.entryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isIncumbent != null">
        is_incumbent = #{record.isIncumbent,jdbcType=VARCHAR},
      </if>
      <if test="record.signPath != null">
        sign_path = #{record.signPath,jdbcType=VARCHAR},
      </if>
      <if test="record.professionalName != null">
        professional_name = #{record.professionalName,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.accessToken != null">
        access_token = #{record.accessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.saveAccessTokenDate != null">
        save_access_token_date = #{record.saveAccessTokenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelFlg != null">
        is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      entry_date = #{record.entryDate,jdbcType=TIMESTAMP},
      is_incumbent = #{record.isIncumbent,jdbcType=VARCHAR},
      sign_path = #{record.signPath,jdbcType=VARCHAR},
      professional_name = #{record.professionalName,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      access_token = #{record.accessToken,jdbcType=VARCHAR},
      save_access_token_date = #{record.saveAccessTokenDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.common.entity.TbUserEntity">
    update tb_user
    <set>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null">
        entry_date = #{entryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isIncumbent != null">
        is_incumbent = #{isIncumbent,jdbcType=VARCHAR},
      </if>
      <if test="signPath != null">
        sign_path = #{signPath,jdbcType=VARCHAR},
      </if>
      <if test="professionalName != null">
        professional_name = #{professionalName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="saveAccessTokenDate != null">
        save_access_token_date = #{saveAccessTokenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        is_del_flg = #{isDelFlg,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.common.entity.TbUserEntity">
    update tb_user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      entry_date = #{entryDate,jdbcType=TIMESTAMP},
      is_incumbent = #{isIncumbent,jdbcType=VARCHAR},
      sign_path = #{signPath,jdbcType=VARCHAR},
      professional_name = #{professionalName,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR},
      save_access_token_date = #{saveAccessTokenDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{isDelFlg,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>