<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.common.dao.TbJobProcessNodeRelationEntityMapper">
  <resultMap id="BaseResultMap" type="com.hd.common.entity.TbJobProcessNodeRelationEntity">
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <id column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <id column="job_id" jdbcType="VARCHAR" property="jobId" />
    <id column="process_dict_id" jdbcType="VARCHAR" property="processDictId" />
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="process_name" jdbcType="VARCHAR" property="processName" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_id, department_id, job_id, process_dict_id, uuid, process_name, node_name
  </sql>
  <select id="selectByExample" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_job_processnode_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_job_processnode_relation
    where node_id = #{nodeId,jdbcType=VARCHAR}
      and department_id = #{departmentId,jdbcType=VARCHAR}
      and job_id = #{jobId,jdbcType=VARCHAR}
      and process_dict_id = #{processDictId,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from tb_job_processnode_relation
    where node_id = #{nodeId,jdbcType=VARCHAR}
      and department_id = #{departmentId,jdbcType=VARCHAR}
      and job_id = #{jobId,jdbcType=VARCHAR}
      and process_dict_id = #{processDictId,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntityExample">
    delete from tb_job_processnode_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntity">
    insert into tb_job_processnode_relation (node_id, department_id, job_id, 
      process_dict_id, uuid, process_name, 
      node_name)
    values (#{nodeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, 
      #{processDictId,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, #{processName,jdbcType=VARCHAR}, 
      #{nodeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntity">
    insert into tb_job_processnode_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="processDictId != null">
        process_dict_id,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="processName != null">
        process_name,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="processDictId != null">
        #{processDictId,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="processName != null">
        #{processName,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntityExample" resultType="java.lang.Long">
    select count(*) from tb_job_processnode_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_job_processnode_relation
    <set>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.processDictId != null">
        process_dict_id = #{record.processDictId,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.processName != null">
        process_name = #{record.processName,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_job_processnode_relation
    set node_id = #{record.nodeId,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=VARCHAR},
      process_dict_id = #{record.processDictId,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      process_name = #{record.processName,jdbcType=VARCHAR},
      node_name = #{record.nodeName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntity">
    update tb_job_processnode_relation
    <set>
      <if test="processName != null">
        process_name = #{processName,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=VARCHAR}
      and department_id = #{departmentId,jdbcType=VARCHAR}
      and job_id = #{jobId,jdbcType=VARCHAR}
      and process_dict_id = #{processDictId,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.common.entity.TbJobProcessNodeRelationEntity">
    update tb_job_processnode_relation
    set process_name = #{processName,jdbcType=VARCHAR},
      node_name = #{nodeName,jdbcType=VARCHAR}
    where node_id = #{nodeId,jdbcType=VARCHAR}
      and department_id = #{departmentId,jdbcType=VARCHAR}
      and job_id = #{jobId,jdbcType=VARCHAR}
      and process_dict_id = #{processDictId,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>