<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.common.dao.TbJobEntityMapper">
  <resultMap id="BaseResultMap" type="com.hd.common.entity.TbJobEntity">
    <id column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="involved_department" jdbcType="VARCHAR" property="involvedDepartment" />
    <result column="partent_job_id" jdbcType="VARCHAR" property="partentJobId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="is_del_flg" jdbcType="VARCHAR" property="isDelFlg" />
    <result column="job_level" jdbcType="VARCHAR" property="jobLevel" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_id, job_name, involved_department, partent_job_id, create_date, create_user_id, 
    update_date, update_user_id, is_del_flg, job_level, sort
  </sql>
  <select id="selectByExample" parameterType="com.hd.common.entity.TbJobEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_job
    where job_id = #{jobId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_job
    where job_id = #{jobId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd.common.entity.TbJobEntityExample">
    delete from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd.common.entity.TbJobEntity">
    <selectKey keyProperty="jobId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_job (job_id, job_name, involved_department, 
      partent_job_id, create_date, create_user_id, 
      update_date, update_user_id, is_del_flg, 
      job_level, sort)
    values (#{jobId,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{involvedDepartment,jdbcType=VARCHAR}, 
      #{partentJobId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}, #{isDelFlg,jdbcType=VARCHAR}, 
      #{jobLevel,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd.common.entity.TbJobEntity">
    <selectKey keyProperty="jobId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      job_id,
      <if test="jobName != null">
        job_name,
      </if>
      <if test="involvedDepartment != null">
        involved_department,
      </if>
      <if test="partentJobId != null">
        partent_job_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="isDelFlg != null">
        is_del_flg,
      </if>
      <if test="jobLevel != null">
        job_level,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{jobId,jdbcType=VARCHAR},
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="involvedDepartment != null">
        #{involvedDepartment,jdbcType=VARCHAR},
      </if>
      <if test="partentJobId != null">
        #{partentJobId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        #{isDelFlg,jdbcType=VARCHAR},
      </if>
      <if test="jobLevel != null">
        #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd.common.entity.TbJobEntityExample" resultType="java.lang.Long">
    select count(*) from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_job
    <set>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.involvedDepartment != null">
        involved_department = #{record.involvedDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.partentJobId != null">
        partent_job_id = #{record.partentJobId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelFlg != null">
        is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLevel != null">
        job_level = #{record.jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_job
    set job_id = #{record.jobId,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      involved_department = #{record.involvedDepartment,jdbcType=VARCHAR},
      partent_job_id = #{record.partentJobId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR},
      job_level = #{record.jobLevel,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.common.entity.TbJobEntity">
    update tb_job
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="involvedDepartment != null">
        involved_department = #{involvedDepartment,jdbcType=VARCHAR},
      </if>
      <if test="partentJobId != null">
        partent_job_id = #{partentJobId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        is_del_flg = #{isDelFlg,jdbcType=VARCHAR},
      </if>
      <if test="jobLevel != null">
        job_level = #{jobLevel,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.common.entity.TbJobEntity">
    update tb_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      involved_department = #{involvedDepartment,jdbcType=VARCHAR},
      partent_job_id = #{partentJobId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{isDelFlg,jdbcType=VARCHAR},
      job_level = #{jobLevel,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR}
    where job_id = #{jobId,jdbcType=VARCHAR}
  </update>
</mapper>