<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.common.dao.TbProStatementEntityMapper">
  <resultMap id="BaseResultMap" type="com.hd.common.entity.TbProStatementEntity">
    <id column="statement_id" jdbcType="VARCHAR" property="statementId" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="statement_amount" jdbcType="DOUBLE" property="statementAmount" />
    <result column="drawing_scheme" jdbcType="DOUBLE" property="drawingScheme" />
    <result column="alter_discuss" jdbcType="DOUBLE" property="alterDiscuss" />
    <result column="visa" jdbcType="DOUBLE" property="visa" />
    <result column="adjust_price" jdbcType="DOUBLE" property="adjustPrice" />
    <result column="surge_price" jdbcType="DOUBLE" property="surgePrice" />
    <result column="service_fee" jdbcType="DOUBLE" property="serviceFee" />
    <result column="tax_price" jdbcType="DOUBLE" property="taxPrice" />
    <result column="other_thing" jdbcType="DOUBLE" property="otherThing" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="is_del_flg" jdbcType="VARCHAR" property="isDelFlg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    statement_id, contract_id, project_id, statement_amount, drawing_scheme, alter_discuss, 
    visa, adjust_price, surge_price, service_fee, tax_price, other_thing, remark, create_date, 
    create_user_id, update_date, update_user_id, is_del_flg
  </sql>
  <select id="selectByExample" parameterType="com.hd.common.entity.TbProStatementEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_pro_statement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_pro_statement
    where statement_id = #{statementId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_pro_statement
    where statement_id = #{statementId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd.common.entity.TbProStatementEntityExample">
    delete from tb_pro_statement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd.common.entity.TbProStatementEntity">
    <selectKey keyProperty="statementId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_pro_statement (statement_id, contract_id, project_id, 
      statement_amount, drawing_scheme, alter_discuss, 
      visa, adjust_price, surge_price, 
      service_fee, tax_price, other_thing, 
      remark, create_date, create_user_id, 
      update_date, update_user_id, is_del_flg
      )
    values (#{statementId,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{statementAmount,jdbcType=DOUBLE}, #{drawingScheme,jdbcType=DOUBLE}, #{alterDiscuss,jdbcType=DOUBLE}, 
      #{visa,jdbcType=DOUBLE}, #{adjustPrice,jdbcType=DOUBLE}, #{surgePrice,jdbcType=DOUBLE}, 
      #{serviceFee,jdbcType=DOUBLE}, #{taxPrice,jdbcType=DOUBLE}, #{otherThing,jdbcType=DOUBLE}, 
      #{remark,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}, #{isDelFlg,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hd.common.entity.TbProStatementEntity">
    <selectKey keyProperty="statementId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_pro_statement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      statement_id,
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="statementAmount != null">
        statement_amount,
      </if>
      <if test="drawingScheme != null">
        drawing_scheme,
      </if>
      <if test="alterDiscuss != null">
        alter_discuss,
      </if>
      <if test="visa != null">
        visa,
      </if>
      <if test="adjustPrice != null">
        adjust_price,
      </if>
      <if test="surgePrice != null">
        surge_price,
      </if>
      <if test="serviceFee != null">
        service_fee,
      </if>
      <if test="taxPrice != null">
        tax_price,
      </if>
      <if test="otherThing != null">
        other_thing,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="isDelFlg != null">
        is_del_flg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{statementId,jdbcType=VARCHAR},
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="statementAmount != null">
        #{statementAmount,jdbcType=DOUBLE},
      </if>
      <if test="drawingScheme != null">
        #{drawingScheme,jdbcType=DOUBLE},
      </if>
      <if test="alterDiscuss != null">
        #{alterDiscuss,jdbcType=DOUBLE},
      </if>
      <if test="visa != null">
        #{visa,jdbcType=DOUBLE},
      </if>
      <if test="adjustPrice != null">
        #{adjustPrice,jdbcType=DOUBLE},
      </if>
      <if test="surgePrice != null">
        #{surgePrice,jdbcType=DOUBLE},
      </if>
      <if test="serviceFee != null">
        #{serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="taxPrice != null">
        #{taxPrice,jdbcType=DOUBLE},
      </if>
      <if test="otherThing != null">
        #{otherThing,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        #{isDelFlg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd.common.entity.TbProStatementEntityExample" resultType="java.lang.Long">
    select count(*) from tb_pro_statement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_pro_statement
    <set>
      <if test="record.statementId != null">
        statement_id = #{record.statementId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.statementAmount != null">
        statement_amount = #{record.statementAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.drawingScheme != null">
        drawing_scheme = #{record.drawingScheme,jdbcType=DOUBLE},
      </if>
      <if test="record.alterDiscuss != null">
        alter_discuss = #{record.alterDiscuss,jdbcType=DOUBLE},
      </if>
      <if test="record.visa != null">
        visa = #{record.visa,jdbcType=DOUBLE},
      </if>
      <if test="record.adjustPrice != null">
        adjust_price = #{record.adjustPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.surgePrice != null">
        surge_price = #{record.surgePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.serviceFee != null">
        service_fee = #{record.serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="record.taxPrice != null">
        tax_price = #{record.taxPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.otherThing != null">
        other_thing = #{record.otherThing,jdbcType=DOUBLE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelFlg != null">
        is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_pro_statement
    set statement_id = #{record.statementId,jdbcType=VARCHAR},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      statement_amount = #{record.statementAmount,jdbcType=DOUBLE},
      drawing_scheme = #{record.drawingScheme,jdbcType=DOUBLE},
      alter_discuss = #{record.alterDiscuss,jdbcType=DOUBLE},
      visa = #{record.visa,jdbcType=DOUBLE},
      adjust_price = #{record.adjustPrice,jdbcType=DOUBLE},
      surge_price = #{record.surgePrice,jdbcType=DOUBLE},
      service_fee = #{record.serviceFee,jdbcType=DOUBLE},
      tax_price = #{record.taxPrice,jdbcType=DOUBLE},
      other_thing = #{record.otherThing,jdbcType=DOUBLE},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{record.isDelFlg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.common.entity.TbProStatementEntity">
    update tb_pro_statement
    <set>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="statementAmount != null">
        statement_amount = #{statementAmount,jdbcType=DOUBLE},
      </if>
      <if test="drawingScheme != null">
        drawing_scheme = #{drawingScheme,jdbcType=DOUBLE},
      </if>
      <if test="alterDiscuss != null">
        alter_discuss = #{alterDiscuss,jdbcType=DOUBLE},
      </if>
      <if test="visa != null">
        visa = #{visa,jdbcType=DOUBLE},
      </if>
      <if test="adjustPrice != null">
        adjust_price = #{adjustPrice,jdbcType=DOUBLE},
      </if>
      <if test="surgePrice != null">
        surge_price = #{surgePrice,jdbcType=DOUBLE},
      </if>
      <if test="serviceFee != null">
        service_fee = #{serviceFee,jdbcType=DOUBLE},
      </if>
      <if test="taxPrice != null">
        tax_price = #{taxPrice,jdbcType=DOUBLE},
      </if>
      <if test="otherThing != null">
        other_thing = #{otherThing,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDelFlg != null">
        is_del_flg = #{isDelFlg,jdbcType=VARCHAR},
      </if>
    </set>
    where statement_id = #{statementId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.common.entity.TbProStatementEntity">
    update tb_pro_statement
    set contract_id = #{contractId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      statement_amount = #{statementAmount,jdbcType=DOUBLE},
      drawing_scheme = #{drawingScheme,jdbcType=DOUBLE},
      alter_discuss = #{alterDiscuss,jdbcType=DOUBLE},
      visa = #{visa,jdbcType=DOUBLE},
      adjust_price = #{adjustPrice,jdbcType=DOUBLE},
      surge_price = #{surgePrice,jdbcType=DOUBLE},
      service_fee = #{serviceFee,jdbcType=DOUBLE},
      tax_price = #{taxPrice,jdbcType=DOUBLE},
      other_thing = #{otherThing,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      is_del_flg = #{isDelFlg,jdbcType=VARCHAR}
    where statement_id = #{statementId,jdbcType=VARCHAR}
  </update>
</mapper>