<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.common.dao.TbTaskReeditEntityMapper">
  <resultMap id="BaseResultMap" type="com.hd.common.entity.TbTaskReeditEntity">
    <id column="reedit_id" jdbcType="VARCHAR" property="reeditId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_process_inst_id" jdbcType="VARCHAR" property="taskProcessInstId" />
    <result column="process_inst_id" jdbcType="VARCHAR" property="processInstId" />
    <result column="delegate_task_key" jdbcType="VARCHAR" property="delegateTaskKey" />
    <result column="delegate_task_id" jdbcType="VARCHAR" property="delegateTaskId" />
    <result column="submit_node" jdbcType="VARCHAR" property="submitNode" />
    <result column="apply_user_id" jdbcType="VARCHAR" property="applyUserId" />
    <result column="apply_user_name" jdbcType="VARCHAR" property="applyUserName" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="approve_user_id" jdbcType="VARCHAR" property="approveUserId" />
    <result column="approve_user_name" jdbcType="VARCHAR" property="approveUserName" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="verify_state" jdbcType="VARCHAR" property="verifyState" />
    <result column="current_state" jdbcType="VARCHAR" property="currentState" />
    <result column="is_can_recall" jdbcType="VARCHAR" property="isCanRecall" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reedit_id, task_id, task_process_inst_id, process_inst_id, delegate_task_key, delegate_task_id, 
    submit_node, apply_user_id, apply_user_name, apply_time, approve_user_id, approve_user_name, 
    approve_time, complete_time, verify_state, current_state, is_can_recall
  </sql>
  <select id="selectByExample" parameterType="com.hd.common.entity.TbTaskReeditEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_task_reedit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_task_reedit
    where reedit_id = #{reeditId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_task_reedit
    where reedit_id = #{reeditId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd.common.entity.TbTaskReeditEntityExample">
    delete from tb_task_reedit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd.common.entity.TbTaskReeditEntity">
    <selectKey keyProperty="reeditId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_task_reedit (reedit_id, task_id, task_process_inst_id, 
      process_inst_id, delegate_task_key, delegate_task_id, 
      submit_node, apply_user_id, apply_user_name, 
      apply_time, approve_user_id, approve_user_name, 
      approve_time, complete_time, verify_state, 
      current_state, is_can_recall)
    values (#{reeditId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{taskProcessInstId,jdbcType=VARCHAR}, 
      #{processInstId,jdbcType=VARCHAR}, #{delegateTaskKey,jdbcType=VARCHAR}, #{delegateTaskId,jdbcType=VARCHAR}, 
      #{submitNode,jdbcType=VARCHAR}, #{applyUserId,jdbcType=VARCHAR}, #{applyUserName,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{approveUserId,jdbcType=VARCHAR}, #{approveUserName,jdbcType=VARCHAR}, 
      #{approveTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}, #{verifyState,jdbcType=VARCHAR}, 
      #{currentState,jdbcType=VARCHAR}, #{isCanRecall,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd.common.entity.TbTaskReeditEntity">
    <selectKey keyProperty="reeditId" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into tb_task_reedit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      reedit_id,
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskProcessInstId != null">
        task_process_inst_id,
      </if>
      <if test="processInstId != null">
        process_inst_id,
      </if>
      <if test="delegateTaskKey != null">
        delegate_task_key,
      </if>
      <if test="delegateTaskId != null">
        delegate_task_id,
      </if>
      <if test="submitNode != null">
        submit_node,
      </if>
      <if test="applyUserId != null">
        apply_user_id,
      </if>
      <if test="applyUserName != null">
        apply_user_name,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="approveUserId != null">
        approve_user_id,
      </if>
      <if test="approveUserName != null">
        approve_user_name,
      </if>
      <if test="approveTime != null">
        approve_time,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
      <if test="verifyState != null">
        verify_state,
      </if>
      <if test="currentState != null">
        current_state,
      </if>
      <if test="isCanRecall != null">
        is_can_recall,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{reeditId,jdbcType=VARCHAR},
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskProcessInstId != null">
        #{taskProcessInstId,jdbcType=VARCHAR},
      </if>
      <if test="processInstId != null">
        #{processInstId,jdbcType=VARCHAR},
      </if>
      <if test="delegateTaskKey != null">
        #{delegateTaskKey,jdbcType=VARCHAR},
      </if>
      <if test="delegateTaskId != null">
        #{delegateTaskId,jdbcType=VARCHAR},
      </if>
      <if test="submitNode != null">
        #{submitNode,jdbcType=VARCHAR},
      </if>
      <if test="applyUserId != null">
        #{applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="applyUserName != null">
        #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveUserId != null">
        #{approveUserId,jdbcType=VARCHAR},
      </if>
      <if test="approveUserName != null">
        #{approveUserName,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyState != null">
        #{verifyState,jdbcType=VARCHAR},
      </if>
      <if test="currentState != null">
        #{currentState,jdbcType=VARCHAR},
      </if>
      <if test="isCanRecall != null">
        #{isCanRecall,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd.common.entity.TbTaskReeditEntityExample" resultType="java.lang.Long">
    select count(*) from tb_task_reedit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_task_reedit
    <set>
      <if test="record.reeditId != null">
        reedit_id = #{record.reeditId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskProcessInstId != null">
        task_process_inst_id = #{record.taskProcessInstId,jdbcType=VARCHAR},
      </if>
      <if test="record.processInstId != null">
        process_inst_id = #{record.processInstId,jdbcType=VARCHAR},
      </if>
      <if test="record.delegateTaskKey != null">
        delegate_task_key = #{record.delegateTaskKey,jdbcType=VARCHAR},
      </if>
      <if test="record.delegateTaskId != null">
        delegate_task_id = #{record.delegateTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.submitNode != null">
        submit_node = #{record.submitNode,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUserId != null">
        apply_user_id = #{record.applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUserName != null">
        apply_user_name = #{record.applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveUserId != null">
        approve_user_id = #{record.approveUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.approveUserName != null">
        approve_user_name = #{record.approveUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.approveTime != null">
        approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeTime != null">
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifyState != null">
        verify_state = #{record.verifyState,jdbcType=VARCHAR},
      </if>
      <if test="record.currentState != null">
        current_state = #{record.currentState,jdbcType=VARCHAR},
      </if>
      <if test="record.isCanRecall != null">
        is_can_recall = #{record.isCanRecall,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_task_reedit
    set reedit_id = #{record.reeditId,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      task_process_inst_id = #{record.taskProcessInstId,jdbcType=VARCHAR},
      process_inst_id = #{record.processInstId,jdbcType=VARCHAR},
      delegate_task_key = #{record.delegateTaskKey,jdbcType=VARCHAR},
      delegate_task_id = #{record.delegateTaskId,jdbcType=VARCHAR},
      submit_node = #{record.submitNode,jdbcType=VARCHAR},
      apply_user_id = #{record.applyUserId,jdbcType=VARCHAR},
      apply_user_name = #{record.applyUserName,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      approve_user_id = #{record.approveUserId,jdbcType=VARCHAR},
      approve_user_name = #{record.approveUserName,jdbcType=VARCHAR},
      approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      verify_state = #{record.verifyState,jdbcType=VARCHAR},
      current_state = #{record.currentState,jdbcType=VARCHAR},
      is_can_recall = #{record.isCanRecall,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.common.entity.TbTaskReeditEntity">
    update tb_task_reedit
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskProcessInstId != null">
        task_process_inst_id = #{taskProcessInstId,jdbcType=VARCHAR},
      </if>
      <if test="processInstId != null">
        process_inst_id = #{processInstId,jdbcType=VARCHAR},
      </if>
      <if test="delegateTaskKey != null">
        delegate_task_key = #{delegateTaskKey,jdbcType=VARCHAR},
      </if>
      <if test="delegateTaskId != null">
        delegate_task_id = #{delegateTaskId,jdbcType=VARCHAR},
      </if>
      <if test="submitNode != null">
        submit_node = #{submitNode,jdbcType=VARCHAR},
      </if>
      <if test="applyUserId != null">
        apply_user_id = #{applyUserId,jdbcType=VARCHAR},
      </if>
      <if test="applyUserName != null">
        apply_user_name = #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveUserId != null">
        approve_user_id = #{approveUserId,jdbcType=VARCHAR},
      </if>
      <if test="approveUserName != null">
        approve_user_name = #{approveUserName,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        approve_time = #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyState != null">
        verify_state = #{verifyState,jdbcType=VARCHAR},
      </if>
      <if test="currentState != null">
        current_state = #{currentState,jdbcType=VARCHAR},
      </if>
      <if test="isCanRecall != null">
        is_can_recall = #{isCanRecall,jdbcType=VARCHAR},
      </if>
    </set>
    where reedit_id = #{reeditId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.common.entity.TbTaskReeditEntity">
    update tb_task_reedit
    set task_id = #{taskId,jdbcType=VARCHAR},
      task_process_inst_id = #{taskProcessInstId,jdbcType=VARCHAR},
      process_inst_id = #{processInstId,jdbcType=VARCHAR},
      delegate_task_key = #{delegateTaskKey,jdbcType=VARCHAR},
      delegate_task_id = #{delegateTaskId,jdbcType=VARCHAR},
      submit_node = #{submitNode,jdbcType=VARCHAR},
      apply_user_id = #{applyUserId,jdbcType=VARCHAR},
      apply_user_name = #{applyUserName,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      approve_user_id = #{approveUserId,jdbcType=VARCHAR},
      approve_user_name = #{approveUserName,jdbcType=VARCHAR},
      approve_time = #{approveTime,jdbcType=TIMESTAMP},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      verify_state = #{verifyState,jdbcType=VARCHAR},
      current_state = #{currentState,jdbcType=VARCHAR},
      is_can_recall = #{isCanRecall,jdbcType=VARCHAR}
    where reedit_id = #{reeditId,jdbcType=VARCHAR}
  </update>
</mapper>